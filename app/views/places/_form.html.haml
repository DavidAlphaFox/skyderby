= form_for @place, html: {class: 'form-horizontal place-form'} do |f|
  .form-group
    = f.label :name, class: 'col-sm-3 control-label', for: :name
    .col-sm-5
      = f.text_field :name, autofocus: true, class: 'form-control'

  .form-group
    = f.label :kind, class: 'col-sm-3 control-label', for: :kind
    .btn-group.col-sm-9{data: {toggle: 'buttons'}}
      %label.btn.btn-default{class: ('active' if @place.skydive?)}
        = f.radio_button 'kind', 'skydive'
        = 'Skydive'

      %label.btn.btn-default{class: ('active' if @place.base?)}
        = f.radio_button 'kind', 'base'
        = 'B.A.S.E'

  .form-group
    = f.label :country, class: 'col-sm-3 control-label', for: :country
    .col-sm-5
      = f.collection_select(:country_id, Country.order(:name), :id, :name, {promt: 'Select country'}, {class: 'form-control'})

  .form-group
    = f.label :latitude, class: 'col-sm-3 control-label', for: :latitude
    .col-sm-5
      = f.text_field :latitude, class: 'form-control'

  .form-group
    = f.label :longitude, class: 'col-sm-3 control-label', for: :longitude
    .col-sm-5
      = f.text_field :longitude, class: 'form-control'

  .form-group
    = f.label :msl, class: 'col-sm-3 control-label', for: :msl
    .col-sm-5
      = f.text_field :msl, class: 'form-control'

  .form-group
    %label.col-sm-3.control-label Exit measurements
    .col-sm-5
      %a.btn.btn-default.place-form__add-measurement
        %i.fa.fa-plus
        Add
      %table.table.place-form__exit-measurements
        %thead
          %tr
            %th Altitude
            %th Distance
            %th
        %tbody
          = f.fields_for :exit_measurements, include_id: false do |measurement_form|
            %tr
              %td
                = measurement_form.number_field :altitude
              %td
                = measurement_form.number_field :distance
              %td
                = measurement_form.hidden_field :id
                = measurement_form.hidden_field :_destroy
                %a.place-form__mark-deleted-measurement
                  %i.fa.fa-times

  .form-group
    .col-sm-offset-3.col-sm-9
      = f.submit t('general.save'), class: 'btn btn-primary'

- content_for :page_js do
  :javascript
    (function() {
      var index = document.querySelectorAll('.place-form__exit-measurements tbody tr').length;

      function create_input(ind, name) {
        var input = document.createElement('input');
        input.setAttribute('type', 'number');
        input.setAttribute('name', 'place[exit_measurements_attributes][' + ind + '][' + name + ']');
        input.setAttribute('id', 'place_exit_measurements_attributes_' + ind + '_' + name);

        return input;
      }

      function on_delete_click(e) {
        e.preventDefault();
        var tr = e.target.closest('tr');
        tr.parentNode.removeChild(tr);
      }

      function create_delete_link() {
        var a = document.createElement('a');
        a.className = 'place-form__delete-measurement';
        var i = document.createElement('i');
        i.className = "fa fa-times";
        a.appendChild(i);
        a.addEventListener('click', on_delete_click);

        return a;
      }

      function create_row(ind) {
        var tbody, tr, td;

        tbody = document.querySelector('.place-form__exit-measurements tbody');
        tr = document.createElement('tr');

        td = document.createElement('td');
        td.appendChild(create_input(ind, 'altitude'));
        tr.appendChild(td);

        td = document.createElement('td');
        td.appendChild(create_input(ind, 'distance'));
        tr.appendChild(td);

        td = document.createElement('td');
        td.appendChild(create_delete_link());
        tr.appendChild(td);

        tbody.appendChild(tr);
      }

      document
      .querySelector('.place-form__add-measurement')
      .addEventListener('click', function(e) {
        e.preventDefault();
        index += 1;
        create_row(index);
      });

      function mark_deleted(e) {
        e.preventDefault();
        var tr = e.target.closest('tr');
        var input = tr.querySelector('input[name$="[_destroy]"]');
        input.value = 'true';
        tr.style.display = 'none';
      }

      var list = document
      .querySelectorAll('.place-form__mark-deleted-measurement');

      for (var i = 0; i < list.length; i++) {
        list[i].addEventListener('click', mark_deleted);
      }
    })();
